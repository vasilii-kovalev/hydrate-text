{
  "name": "hydrate-text",
  "version": "1.2.5",
  "description": "Tiny library for dynamic text hydrating with variables",
  "main": "dist/cjs/index.js",
  "umd:main": "dist/umd/index.js",
  "module": "dist/esm/index.js",
  "types": "dist/typings/index.d.ts",
  "unpkg": "dist/umd/index.min.js",
  "jsdelivr": "dist/umd/index.min.js",
  "sideEffects": false,
  "keywords": [
    "javascript",
    "typescript",
    "template",
    "string",
    "formatter",
    "zero-dependency",
    "tree-shakable"
  ],
  "author": "Vasilii Kovalev <vasya.kowalev@yandex.ru>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vasilii-kovalev/hydrate-text.git"
  },
  "homepage": "https://github.com/vasilii-kovalev/hydrate-text#readme",
  "bugs": {
    "url": "https://github.com/vasilii-kovalev/hydrate-text/issues"
  },
  "devDependencies": {
    "@types/jest": "^26.0.7",
    "@types/node": "^14.0.26",
    "@types/terser-webpack-plugin": "^3.0.0",
    "@types/webpack": "^4.41.21",
    "@typescript-eslint/eslint-plugin": "^3.7.0",
    "@typescript-eslint/parser": "^3.7.0",
    "babel-core": "6.26.3",
    "babel-loader": "8.1.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.5.0",
    "eslint-config-airbnb-base": "^14.2.0",
    "eslint-plugin-import": "^2.22.0",
    "husky": "^4.2.5",
    "jest": "^26.1.0",
    "terser-webpack-plugin": "^3.0.7",
    "ts-jest": "^26.1.3",
    "ts-node": "^8.10.2",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.9.7",
    "webpack": "4.44.0",
    "webpack-cli": "3.3.12"
  },
  "scripts": {
    "test": "jest",
    "tslint": "tsc --noEmit",
    "eslint": "eslint --ext .ts src webpack.config.ts --color",
    "build:esm": "tsc -p tsconfig.json",
    "build:cjs": "tsc -p tsconfig.node.json",
    "build:umd": "cross-env TS_NODE_PROJECT=\"tsconfig.webpack.json\" webpack",
    "build:umd:min": "npm run build:umd -- --env.MINIMIZE",
    "prebuild": "npm run build:esm && npm run build:cjs",
    "build": "npm run build:umd && npm run build:umd:min",
    "prepare": "npm run build",
    "prepublishOnly": "npm run tslint && npm run eslint && npm test",
    "postversion": "git push && git push --tags"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/index.ts"
    ],
    "coverageDirectory": "./coverage"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run prepublishOnly"
    }
  }
}
